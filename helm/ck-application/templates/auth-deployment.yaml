apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "ck-authentication.name" . }}-hooks
spec:
  template:
    spec:
      containers:
        - name: keystore-convert
          image: alpine:3.13
          command: ["/bin/sh", "-c"]
          args:
          - |
            apk add --no-cache openssl;
            openssl pkcs12 -export \
              -in {{ .Values.server.secretsPath.certPath }}/tls.crt \
              -inkey {{ .Values.server.secretsPath.certPath }}/tls.key \
              -out {{ .Values.server.secretsPath.keyStorePath }}/keystore.p12 \
              -CAfile {{ .Values.server.secretsPath.certPath }}/ca.crt \
              -name ssl-cert \
              -passout pass:$KEYSTORE_PASSWORD
          env:
          - name: KEYSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ck-authentication.name" . }}-secret
                key: {{ template "ck-authentication.name" . }}-keystore-password
          volumeMounts:
          - name: tls-auth-secret
            mountPath: {{ .Values.server.secretsPath.certPath }}
          - name: keystore-cert
            mountPath: {{ .Values.server.secretsPath.keyStorePath }}
            subPath: keystore.p12
      volumes:
      - name: tls-auth-secret
        secret:
          secretName: tls-cert
      - name: keystore-cert
        persistentVolumeClaim:
          claimName: {{ template "ck-authentication.name" . }}-pv-claim
      restartPolicy: OnFailure
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ck-authentication.name" . }}
  labels: 
    {{- include "ck-authentication.labels" . | nindent 4 }}
  annotations: 
    {{- include "ck-application.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  strategy:
    {{ toYaml .Values.updateStrategy | indent 4 }}
  selector:
    matchLabels: 
      {{- include "ck-authentication.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations: 
        {{- include "ck-application.annotations" . | nindent 8 }}
      labels: 
        {{- include "ck-authentication.labels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: {{ template "ck-application.fsGroup.coordinated" . }}
        {{- include "ck-application.podSeccompProfile" . | indent 8 }}
        {{- include "ck-application.supplementalGroups" . }}
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.36.1
          command:
            - sh
            - -c
            - |
              echo "Starting initContainer to wait for MySQL";
              while ! nc -z -v -w30 {{ template "ck-mysql.name" . }} {{ .Values.server.mysqlServer.port }};
              do
                echo "Waiting for MySQL to be ready...";
                sleep 5;
              done;
              echo "MySQL is up and running";
              echo "Init container finished successfully";
      containers:
        {{- include "ck-auth-containers" (list .) | nindent 6 }}